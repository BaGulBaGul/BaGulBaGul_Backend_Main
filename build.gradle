plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.13'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'com.BaGulBaGul'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '11'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	querydsl.extendsFrom compileClasspath
}

repositories {
	mavenCentral()
}

project.ext {
	querydslVersion = dependencyManagement.importedProperties['querydsl.version']
}

def querydslDir = "$buildDir/generated/querydsl"

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-batch'
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.flywaydb:flyway-mysql'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testCompileOnly 'org.projectlombok:lombok:1.18.12' // 테스트 의존성 추가
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.12' // 테스트 의존성 추가

	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'com.mysql:mysql-connector-j'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.springframework.batch:spring-batch-test'
	testImplementation "org.testcontainers:testcontainers:1.20.5"
	testImplementation "org.testcontainers:junit-jupiter:1.20.5"
	testImplementation "org.testcontainers:mysql:1.20.5"

	//스프링 logging 기본 slf4j구현체인 logback을 log4j2로 변경
	implementation("org.springframework.boot:spring-boot-starter-log4j2")
	modules {
		module("org.springframework.boot:spring-boot-starter-logging") {
			replacedBy("org.springframework.boot:spring-boot-starter-log4j2")
		}
	}

	// Querydsl
	implementation "com.querydsl:querydsl-jpa"

	// JAVA JWT
	implementation("com.auth0:java-jwt:3.16.0")

	// p6spy (쿼리 로그)
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.5.6'

	//Swagger(springfox)
	implementation 'io.springfox:springfox-boot-starter:3.0.0'

	//jwt
	implementation "io.jsonwebtoken:jjwt:0.9.1"

	//JsonNullable
	implementation "org.openapitools:jackson-databind-nullable:0.2.4"

	//Log4j2
//	implementation 'org.springframework.boot:spring-boot-starter-log4j2'

	//querydsl
	implementation "com.querydsl:querydsl-apt:${project.querydslVersion}"
	implementation "com.querydsl:querydsl-jpa:${project.querydslVersion}"
	implementation "com.querydsl:querydsl-collections"

	//aws
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

	// querydsl JPAAnnotationProcessor 사용 지정
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api" // java.lang.NoClassDefFoundError (javax.annotation.Generated) 발생 대응
}

querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}
sourceSets {
	main.java.srcDir querydslDir
}
compileQuerydsl{
	options.annotationProcessorPath = configurations.querydsl
}

tasks.named('test') {
	useJUnitPlatform()
}
